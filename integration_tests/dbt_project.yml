name: 'lever_source_integration_tests'
version: '0.8.1'
config-version: 2
profile: 'integration_tests'
vars:
  lever_schema: lever_source_integration_tests
  lever_source:
    lever_application_identifier: "application" # @docs-include
    lever_archive_reason_identifier: "archive_reason" # @docs-include
    lever_feedback_form_identifier: "feedback_form" # @docs-include
    lever_feedback_form_field_identifier: "feedback_form_field" # @docs-include
    lever_interview_feedback_identifier: "interview_feedback" # @docs-include
    lever_interview_identifier: "interview" # @docs-include
    lever_interviewer_user_identifier: "interviewer_user" # @docs-include
    lever_interview_user_identifier: "interview_user" # @docs-include
    lever_offer_identifier: "offer" # @docs-include
    lever_opportunity_source_identifier: "opportunity_source" # @docs-include
    lever_opportunity_stage_history_identifier: "opportunity_stage_history" # @docs-include
    lever_opportunity_tag_identifier: "opportunity_tag" # @docs-include
    lever_opportunity_identifier: "opportunity" # @docs-include
    lever_posting_interview_identifier: "posting_interview" # @docs-include
    lever_posting_tag_identifier: "posting_tag" # @docs-include
    lever_posting_identifier: "posting" # @docs-include
    lever_requisition_posting_identifier: "requisition_posting" # @docs-include
    lever_requisition_offer_identifier: "requisition_offer" # @docs-include
    lever_requisition_identifier: "requisition" # @docs-include
    lever_stage_identifier: "stage" # @docs-include
    lever_user_identifier: "user" # @docs-include
    lever_users_identifier: "users" # @docs-include
    lever_contact_email_identifier: "contact_email" # @docs-include
    lever_contact_phone_identifier: "contact_phone" # @docs-include
    lever_contact_link_identifier: "contact_link" # @docs-include
    lever_resume_identifier: "resume" # @docs-include
seeds:
  lever_source_integration_tests:
    +column_types:
      _fivetran_synced: timestamp
    application:
      +column_types:
        archived_at: timestamp
        created_at: timestamp
    feedback_form:
      +column_types:
        completed_at: timestamp
        created_at: timestamp
        deleted_at: timestamp
    feedback_form_field:
      +column_types:
        field_index: "{{ 'int64' if target.type == 'bigquery' else 'bigint' }}"
        value_index: "{{ 'int64' if target.type == 'bigquery' else 'bigint' }}"
        value_date: timestamp
        value_decimal: numeric
    interview:
      +column_types:
        canceled_at: timestamp
        created_at: timestamp
        date: timestamp
        duration: "{{ 'int64' if target.type == 'bigquery' else 'bigint' }}"
    offer:
      +column_types:
        created_at: timestamp
    opportunity:
      +column_types:
        archived_at: timestamp
        created_at: timestamp
        data_protection_contact_expires_at: timestamp
        data_protection_store_expires_at: timestamp
        last_advanced_at: timestamp
        last_interaction_at: timestamp
        snoozed_until: timestamp
        updated_at: timestamp
    opportunity_stage_history:
      +column_types:
        updated_at: timestamp
    posting:
      +column_types:
        created_at: timestamp
        updated_at: timestamp
    posting_tag:
      +quote_columns: "{{ true if target.type == 'redshift' else false }}"
    requisition:
      +column_types:
        created_at: timestamp
    user:
      +column_types:
        created_at: timestamp
        deactivated_at: timestamp
    users:
      +column_types:
        created_at: timestamp
        deactivated_at: timestamp
    opportunity_tag:
      +quote_columns: "{{ true if target.type == 'redshift' else false }}"
    contact_phone:
      +column_types:
        index: "{{ 'int64' if target.type == 'bigquery' else 'bigint' }}"
        value: "{{ 'string' if target.type in ('bigquery', 'spark', 'databricks') else 'varchar' }}"
    contact_link:
      +column_types:
        contact_id: "{{ 'string' if target.type in ('bigquery', 'spark', 'databricks') else 'varchar' }}"
        link: "{{ 'string' if target.type in ('bigquery', 'spark', 'databricks') else 'varchar' }}"
    resume:
      +column_types:
        id: "{{ 'string' if target.type in ('bigquery', 'spark', 'databricks') else 'varchar' }}"
        file_ext: "{{ 'string' if target.type in ('bigquery', 'spark', 'databricks') else 'varchar' }}"
        created_at: timestamp
        file_uploaded_at: timestamp

dispatch:
  - macro_namespace: dbt_utils
    search_order: ['spark_utils', 'dbt_utils']

flags:
  send_anonymous_usage_stats: False
